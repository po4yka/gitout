# Name of the workflow
name: Docker Publish

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Also run on version tags like v1.0.0
    tags: [ 'v*.*.*' ]
  # Run on pull requests targeting the main branch
  pull_request:
    branches: [ "main" ]

env:
  # The registry to push the image to. For GitHub Container Registry.
  REGISTRY: ghcr.io
  # The image name will be your GitHub username/repository name. e.g., "your-name/gitout"
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    # Use the latest version of Ubuntu for the runner
    runs-on: ubuntu-latest
    # Set permissions for the GITHUB_TOKEN
    permissions:
      contents: read
      packages: write # Required to push to GitHub Packages
      id-token: write # Required for signing the image with Sigstore

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool for image signing, except on Pull Requests
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      # Set up Docker Buildx for multi-platform builds
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      # Log into the GitHub Container Registry (ghcr.io)
      # This step is skipped for pull requests
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for the Docker image
      # This action creates tags based on the event (e.g., branch, git tag, sha)
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push the Docker image using Buildx
      # Pushing is disabled for pull requests
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: . # Use the root of the repo as the build context
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Enable build cache to speed up future builds
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the pushed Docker image using cosign
      # This adds a layer of security and trust to your images
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
